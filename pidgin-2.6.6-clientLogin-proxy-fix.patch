http://developer.pidgin.im/viewmtn/revision/info/b14ee507e932a395a0e1f29298af162c8614ca0f
Allow clientLogin POST/GETs to use a configured proxy.
Thanks to jweyrich for discovering this.

#
#
# patch "libpurple/protocols/oscar/clientlogin.c"
#  from [318c59bcf45207fefad4ab7a0e34bd63ebf7de34]
#    to [2218cfaa1f1341b9db55d780c9cb5b738a57c81c]
#
============================================================
--- libpurple/protocols/oscar/clientlogin.c	318c59bcf45207fefad4ab7a0e34bd63ebf7de34
+++ libpurple/protocols/oscar/clientlogin.c	2218cfaa1f1341b9db55d780c9cb5b738a57c81c
@@ -293,8 +293,12 @@ static void send_start_oscar_session(Osc
 static void send_start_oscar_session(OscarData *od, const char *token, const char *session_key, time_t hosttime)
 {
 	char *query_string, *signature, *url;
-	gboolean use_tls = purple_account_get_bool(purple_connection_get_account(od->gc), "use_ssl", OSCAR_DEFAULT_USE_SSL);
+	PurpleAccount *account;
+	gboolean use_tls;
 
+	account = purple_connection_get_account(od->gc);
+	use_tls = purple_account_get_bool(account, "use_ssl", OSCAR_DEFAULT_USE_SSL);
+
 	/*
 	 * Construct the GET parameters.  0x00000611 is the distid given to
 	 * us by AOL for use as the default libpurple distid.
@@ -317,7 +321,8 @@ static void send_start_oscar_session(Osc
 	g_free(signature);
 
 	/* Make the request */
-	od->url_data = purple_util_fetch_url(url, TRUE, NULL, FALSE,
+	od->url_data = purple_util_fetch_url_request_len_with_account(account,
+			url, TRUE, NULL, FALSE, NULL, FALSE, -1,
 			start_oscar_session_cb, od);
 	g_free(url);
 }
@@ -573,8 +578,9 @@ void send_client_login(OscarData *od, co
 	g_string_free(body, TRUE);
 
 	/* Send the POST request  */
-	od->url_data = purple_util_fetch_url_request(URL_CLIENT_LOGIN,
-			TRUE, NULL, FALSE, request->str, FALSE,
+	od->url_data = purple_util_fetch_url_request_len_with_account(
+			purple_connection_get_account(gc), URL_CLIENT_LOGIN,
+			TRUE, NULL, FALSE, request->str, FALSE, -1,
 			client_login_cb, od);
 	g_string_free(request, TRUE);
 }
